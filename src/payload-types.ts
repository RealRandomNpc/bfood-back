/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    'cms-users': CmsUser;
    products: Product;
    categories: Category;
    media: Media;
    tags: Tag;
    'products-options': ProductsOption;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {
    footer: Footer;
    'index-page': IndexPage;
    'cart-settings': CartSetting;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cms-users".
 */
export interface CmsUser {
  id: string;
  firstName?: string | null;
  lastName?: string | null;
  roles?: ('super-admin' | 'admin' | 'user')[] | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: string;
  name: string;
  description?: string | null;
  price: number;
  img?: string | Media | null;
  category?: (string | null) | Category;
  tags?:
    | {
        tag?: (string | null) | Tag;
        id?: string | null;
      }[]
    | null;
  has_product_options?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: string;
  title: string;
  sub_title?: string | null;
  products?: (string | Product)[] | null;
  priority?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tags".
 */
export interface Tag {
  id: string;
  name: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products-options".
 */
export interface ProductsOption {
  id: string;
  product_options_name?: string | null;
  products?: (string | Product)[] | null;
  product_options_blocks?:
    | {
        title: string;
        sub_title?: string | null;
        min_select?: number | null;
        max_select?: number | null;
        options_type?: ('radio' | 'single' | 'multiple') | null;
        available_options?:
          | {
              name: string;
              extra_price?: number | null;
              img?: string | Media | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'default-product-option';
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'cms-users';
    value: string | CmsUser;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: string;
  links?:
    | {
        label?: string | null;
        link?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "index-page".
 */
export interface IndexPage {
  id: string;
  beforeProducts?:
    | (
        | {
            text?: string | null;
            autoFill?: boolean | null;
            speed?: number | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'marquee';
          }
        | {
            header_img?: string | Media | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'full-header';
          }
      )[]
    | null;
  afterSearchPromoted?:
    | {
        title: string;
        sub_title?: string | null;
        products?: (string | Product)[] | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'category-block';
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cart-settings".
 */
export interface CartSetting {
  id: string;
  pickup: {
    is_active?: boolean | null;
    more_details?: string | null;
  };
  delivery: {
    is_active?: boolean | null;
    more_details?: string | null;
  };
  min_order?: number | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}